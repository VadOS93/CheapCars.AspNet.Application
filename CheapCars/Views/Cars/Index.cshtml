@using CheapCars.Data.ViewModels
@model CarViewModel

@{
    ViewData["Title"] = "List of Cars";
}

<div class="btn-group sort-btn" >
    <a class="btn btn-primary" asp-controller="Cars" asp-action="SortByDesc">
        <i class="bi bi-sort-down"></i> Price
    </a>
</div>

<div class="btn-group sort-btn">
    <a class="btn btn-primary" asp-controller="Cars" asp-action="SortByAsc">
        <i class="bi bi-sort-up"></i> Price
    </a>
</div>

<div class="btn-group sort-btn">
    <a class="btn btn-primary" asp-controller="Cars" asp-action="Available">
        <i class="bi bi-card-checklist"></i> Show Available
    </a>
</div>

<div class="row">
    @foreach (var item in Model.PaginatedCars())
    {
        <div class="col-md-4 col-xs-6 border-primary mb-3">
            <div class="card mb-3" style="max-width: 540px;">
                <div class="row g-0">
                    <div class="col-md-12">
                        <div class="card-header text-white bg-info">
                            <p class="card-text">
                                <h5 class="card-title">
                                    @item.Name
                                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                                    {
                                        <a class="text-white float-right" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i></a>
                                    }
                                </h5>
                            </p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <img src="@item.ImageURL" width="100%" alt="@item.Name">
                    </div>
                    <div class="col-md-6">
                        <div class="card-body">
                            <p class="card-text">@item.CarInfo</p>
                            <p class="card-text"><b>Sell Place: </b>@item.SellPlace.Name</p>
                            <p class="card-text"><b>Type: </b>@item.CarType</p>
                            <p class="card-text"><b>Start Date: </b>@item.StartSalesDate.ToString("dd MMM yy")</p>
                            <p class="card-text"><b>End Date: </b>@item.EndSalesDate.ToString("dd MMM yy")</p>
                            <p class="card-text">
                                <b>Status: </b>
                                @if (DateTime.UtcNow >= item.StartSalesDate && DateTime.UtcNow <= item.EndSalesDate)
                                {
                                    <span class="badge bg-success text-white">Available</span>
                                }
                                else if (DateTime.UtcNow > item.EndSalesDate)
                                {
                                    <span class="badge bg-danger text-white">Expired</span>
                                }
                                else
                                {
                                    <span class="badge bg-primary text-white">Upcoming</span>
                                }
                            </p>

                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="card-footer ">
                            <p class="card-text">
                                <a class="btn btn-outline-primary float-right" asp-action="Details" asp-route-id="@item.Id">
                                    <i class="bi bi-eye-fill"></i> Show Details
                                </a>
                                <a class="btn btn-success text-white @((DateTime.Now > item.EndSalesDate) ? "disabled" : "")"
                               asp-controller="Orders"
                               asp-action="AddItemToBusket"
                               asp-route-id="@item.Id">
                                    <i class="bi bi-cart-plus"></i> Add to Busket (Price @item.Price.ToString("c"))
                                </a>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<ul class="pagination">
    @for (int i = 1; i <= Model.PageCount(); i++)
    {
        <li class="@(i == Model.CurrentPage ? "page-item active" : "page-item")">
            <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
        </li>
    }
</ul>

@await Html.PartialAsync("_CreateItem", "Cars")